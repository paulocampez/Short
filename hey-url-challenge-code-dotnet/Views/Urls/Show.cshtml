@model hey_url_challenge_code_dotnet.ViewModels.ShowViewModel

@{
	ViewBag.Title = "Show";
	Layout = "_Layout";
}

<div class="row">
	<div class="col s12">
		<ul class="card-panel collection with-header">
			<li class="collection-header">
				<h4>
					Stats for @Html.ActionLink(Model.Url.ShortUrl,"Show", new {idUrl = Model.Url.Id})
				</h4>
			</li>
			<li class="collection-item">@Model.Url.CreatedAt.ToString("dddd, dd MMMM yyyy")</li>
			<li class="collection-item">
				Original URL: @Model.Url.OriginalUrl
			</li>
		</ul>
	</div>
</div>
@if (Model.DailyClicks.Count() > 0)
{
	<div class="row">
		<div class="col s12">
			<div class="card-panel">
				<div id="total-clicks-chart"></div>
			</div>
		</div>
	</div>
}
<div class="row">
	<div class="col s6">
		<div class="card-panel">
			<div id="platforms-chart"></div>
		</div>
	</div>

	<div class="col s6">
		<div class="card-panel">
			<div id="browsers-chart"></div>
		</div>
	</div>
</div>

<script>
	google.charts.load('current', {packages: ['corechart']});
	google.charts.setOnLoadCallback(drawCharts);
	function drawTotalClicksChart() {
	  var data = google.visualization.arrayToDataTable([
		['day', 'clicks'],
	  ].concat(@Json.Serialize(Model.DailyClicks.Select(e => new object[] { e.Key, e.Value }))));
	  var options = {
		title: 'total clicks',
		haxis: {
		  title: 'day of month'
		},
		vaxis: {
		  title: 'clicks'
		}
	  };
	  var chart = new google.visualization.AreaChart(
		document.getElementById('total-clicks-chart')
	  );
	  chart.draw(data, options);
	}
	function drawBrowsersChart() {
	  var data = google.visualization.arrayToDataTable([
		['browser', 'clicks'],
	  ].concat(@Json.Serialize(Model.BrowseClicks.Select(e => new object[] { e.Key, e.Value }))));
	  var options = {
		title: 'Browsers'
	  };
	  var chart = new google.visualization.PieChart(
		document.getElementById('browsers-chart')
	  );
	  chart.draw(data, options);
	}
	function drawPlatformsChart() {
	  var data = google.visualization.arrayToDataTable([
		['platform', 'clicks'],
	  ].concat(@Json.Serialize(Model.PlatformClicks.Select(e => new object[] { e.Key, e.Value }))));
	  var options = {
		title: 'Platform'
	  };
	  var chart = new google.visualization.PieChart(
		document.getElementById('platforms-chart')
	  );
	  chart.draw(data, options);
	}
	function drawCharts() {
	  drawTotalClicksChart();
	  drawBrowsersChart();
	  drawPlatformsChart();
	}
</script>